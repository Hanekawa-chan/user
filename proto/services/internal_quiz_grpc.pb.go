// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.6.1
// source: internal_quiz.proto

package services

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// InternalQuizServiceClient is the client API for InternalQuizService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type InternalQuizServiceClient interface {
	GetUserWords(ctx context.Context, in *UserWordsRequest, opts ...grpc.CallOption) (*UserWords, error)
}

type internalQuizServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewInternalQuizServiceClient(cc grpc.ClientConnInterface) InternalQuizServiceClient {
	return &internalQuizServiceClient{cc}
}

func (c *internalQuizServiceClient) GetUserWords(ctx context.Context, in *UserWordsRequest, opts ...grpc.CallOption) (*UserWords, error) {
	out := new(UserWords)
	err := c.cc.Invoke(ctx, "/kanji.internal.quiz.InternalQuizService/GetUserWords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InternalQuizServiceServer is the server API for InternalQuizService service.
// All implementations should embed UnimplementedInternalQuizServiceServer
// for forward compatibility
type InternalQuizServiceServer interface {
	GetUserWords(context.Context, *UserWordsRequest) (*UserWords, error)
}

// UnimplementedInternalQuizServiceServer should be embedded to have forward compatible implementations.
type UnimplementedInternalQuizServiceServer struct {
}

func (UnimplementedInternalQuizServiceServer) GetUserWords(context.Context, *UserWordsRequest) (*UserWords, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserWords not implemented")
}

// UnsafeInternalQuizServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to InternalQuizServiceServer will
// result in compilation errors.
type UnsafeInternalQuizServiceServer interface {
	mustEmbedUnimplementedInternalQuizServiceServer()
}

func RegisterInternalQuizServiceServer(s grpc.ServiceRegistrar, srv InternalQuizServiceServer) {
	s.RegisterService(&InternalQuizService_ServiceDesc, srv)
}

func _InternalQuizService_GetUserWords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserWordsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalQuizServiceServer).GetUserWords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kanji.internal.quiz.InternalQuizService/GetUserWords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalQuizServiceServer).GetUserWords(ctx, req.(*UserWordsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// InternalQuizService_ServiceDesc is the grpc.ServiceDesc for InternalQuizService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var InternalQuizService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "kanji.internal.quiz.InternalQuizService",
	HandlerType: (*InternalQuizServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserWords",
			Handler:    _InternalQuizService_GetUserWords_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal_quiz.proto",
}
